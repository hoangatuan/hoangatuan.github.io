---
import type { Book } from "../../types/books.types";
import { Icon } from "astro-icon/components";
import { getFormattedDate } from "../../utils/utils";
import PostTags from "../common/Tags.astro";
import { getPermalink } from "../../utils/permalinks";
import { findImage } from "../../utils/images.ts";

import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

export interface Props {
  prefix: string;
  book: Book;
}

const { prefix, book } = Astro.props;
const imagePath = book.cover;
const link = getPermalink(book.permalink, "book");

// Dynamic images: https://docs.astro.build/en/recipes/dynamically-importing-images/
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/content/book/*.{jpeg,jpg,png,gif}')
if (!images[imagePath]) throw new Error(`"${imagePath}" does not exist in glob: "src/assets/content/book/*.{jpeg,jpg,png,gif}"`);

---

<article
  class="p-6 bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700 group cursor-pointer"
>
  <a href={`/${prefix}${link}`} class="block">

    <div class="flex items-center mb-6">
      <Image class="rounded-lg w-full object-contain h-40" src={images[imagePath]()} alt={book.title} />
    </div>

    <div class="block">
      <h2
        class="text-xl sm:text-2xl font-bold leading-tight mb-2 font-heading dark:text-slate-300 line-clamp-3"
      >
        {book.title}
      </h2>
      <p class="mb-5 font-light text-gray-500 dark:text-gray-400">
        {book.excerpt}
      </p>

      <div class="flex items-center font-medium">
        <div class="flex items-center">
          <PostTags tags={book.categories} />
        </div>
      
        <span class="text-sm ml-auto">
          <Icon
            name="tabler:clock"
            class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400"
          />
          <time datetime={String(book.publishDate)} class="inline-block">
            {getFormattedDate(book.publishDate)}
          </time>
        </span>
      </div>
  </a>
</article>
